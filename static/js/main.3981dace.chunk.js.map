{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","CardList","robots","cardComponent","map","user","i","SearchBox","searchChange","type","placeholder","onChange","scroll","style","overflowY","border","borderRadius","height","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","Response","json","users","filterRobots","this","filter","robot","toLowerCase","includes","length","Scroll","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAaeA,EAbF,SAACC,GAEV,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,iBAAmDC,IAAI,WAC/D,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCcXC,EAnBE,SAAC,GACjB,IADkBC,EACnB,EADmBA,OAETC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACxC,OACI,cAAC,EAAD,CAEQT,GAAIK,EAAOI,GAAGT,GACdE,KAAMG,EAAOI,GAAGP,KAChBC,MAAOE,EAAOI,GAAGN,OAHZM,MAOjB,OACI,8BACMH,KCHCI,EAbG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,aACjB,OACI,qBAAKb,UAAU,MAAf,SACI,uBACAA,UAAU,sCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCPI,EARA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAkBC,aAAc,MAAOC,OAAQ,SAAzF,SACKvB,EAAMwB,YCwCJC,G,wDApCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAbzC,EAAKC,MAAQ,CACTxB,OAAQ,GACRqB,YAAa,IAJP,E,gEAQO,IAAD,OAChBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKT,SAAS,CAACpB,OAAQ6B,S,+BAOjC,IAAD,OACCC,EAAeC,KAAKP,MAAMxB,OAAOgC,QAAO,SAAAC,GAC1C,OAAOA,EAAMpC,KAAKqC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAEpE,OAAgC,IAA7BH,KAAKP,MAAMxB,OAAOoC,OAAqB,oBAAI3C,UAAU,QAAd,wBAGtC,sBAAKA,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAcyB,KAAKb,iBAC9B,cAACmB,EAAD,UACI,cAAC,EAAD,CAAUrC,OAAQ8B,a,GA9BpBQ,IAAMC,YCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3981dace.chunk.js","sourcesContent":["const Card = (props) =>\r\n{\r\n    return (\r\n        <div className='tc bg-light-purple dib br3 pa2 ma3 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${props.id}?size=200x200`} alt=\"robots\"></img>\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\n\r\nconst CardList = ({robots}) =>\r\n{\r\n    const cardComponent = robots.map((user, i) => {\r\n    return  (\r\n        <Card \r\n                key={i} \r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email} \r\n        />\r\n    )\r\n});\r\n    return (\r\n        <div>\r\n            { cardComponent }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","const SearchBox = ( {searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='tc pa3 ba b--green bg-lightest-blue' \r\n            type='search' \r\n            placeholder='search robots'\r\n            onChange={searchChange}\r\n            ></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","const scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '3px solid white',borderRadius: '5px', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default scroll;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(Response => Response.json())\r\n        .then(users => {this.setState({robots: users})});\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchField: event.target.value});\r\n        }\r\n\r\n    render() {\r\n        const filterRobots = this.state.robots.filter(robot=> {\r\n            return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n        })\r\n        if(this.state.robots.length === 0) return <h1 className='f1 tc'>LOADING...</h1>\r\n    \r\n        else return (\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <CardList robots={filterRobots}/>\r\n                </Scroll>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App.js';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}